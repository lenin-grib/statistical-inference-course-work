install ("ggplot2")
install.packages("ggplot2")
q()
install.packages("ggplot2")
q
q()
find.package("devtools")
install.packages("devtools")
q()
install.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
install.packages("pkgbuild")
library (pkgbuild)
install.packages("devtools")
update.packages(ask='graphics',checkBuilt=TRUE)
library(devtools)
find_rtools()
q()
load("C:/Users/LeninGrib/Desktop/DS/R/wp.RData")
install.packages("RMySQL", type = "source")
Sys.getenv('MYSQL_HOME')
setwd("C:/Users/LeninGrib/Desktop/DS/R")
swirl()
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col = "blue")
abline(h=.4, col = "red")
5
12
abline(h=.05, col = "green")
dst(dFsm)
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy, col = c("red","orange","purple"). pch = 3, cex = 2, lwd = 2)
points(cx,cy, col = c("red","orange","purple"), pch = 3, cex = 2, lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x,newClust, mean)
tapply(y,newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch = 19, cex = 2, col = cols1[newClust2])
tapply(x,newClust2, mean)
tapply(y,newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col=c("black","red","green"), pch = 3, cex = 3, lwd = 3)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
set.seed(678910)
for(i in 1:40){
# flip a coin
coinFlip <- rbinom(1,size=1,prob=0.5)
# if coin is heads add a common pattern to that row
if(coinFlip){
dataMatrix[i,] <- dataMatrix[i,] + rep(c(0,3),each=5)
}
}
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% matv
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2[,1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$d[1]*(svd1$u[,1] %*% svd1$d[1])
a1 <- t(svd1$v[,1])*(svd1$u[,1] %*% svd1$d[1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(ssd[1:12])
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
mypclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <-svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12, maxCon])
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], kmeans = 6)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity, nstart = 100)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
pwd()
swirl()
library(swirl)
swirl()
dice_sqr
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair - 3.5^2
sum(dice_sqr * dice_high) - edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/2*sqrt(10)
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5,3)*0.8^3*0.2^2
sum(sapply(3:5, FUN = f{choose(5,x)*(.8)^x*(.2)^(5-x)}))
sum(sapply(3:5, FUN = f(x){choose(5,x)*(.8)^x*(.2)^(5-x)}))
sum(sapply(3:5, f(x){choose(5,x)*(.8)^x*(.2)^(5-x)}))
sum(sapply(3:5, function(x){choose(5,x)*(.8)^x*(.2)^(5-x)}))
pbinom(2,5,.8,lower.tail = FALSE)
qnorm(.1)
0
qnorm(0.975, mean = 3, sd=2)
1.96*2+3
pnorm(1200, mean = 1020, sd = 50, lower.tail = F)
pnorm(1200, mean = 1020, sd = 50, lower.tail = FALSE)
pnorm((1200-1020)/50, lower.tail = FALSE)
qnorm(.75, mean = 1020, sd = 50)
.53
ppois(3, mean = 2.5*4)
ppois(quantile = 3, mean = 2.5*4)
ppois(3, 2.5*4)
pbinom(5,1000,.01)
ppois(5, 1000*0.01)
coinPlot(10)
coinPlot(10000)
qnorm(.95)
0.6+c(-1;1)*qnorm(.975)*sqrt(0.6*0.4/100)
0.6+c(-1,1)*qnorm(.975)*sqrt(0.6*0.4/100)
binom.test(60,100)
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5, 94.32)$conf
?pnorm
qnorm(70, mean = 80, sd = 10)
pnorm(70, mean = 80, sd = 10)
qnorm(.975, mean = 1100, sd = 75)
150/10
pbinom(4, size = 5, prob = 1/2, lower.tail = FALSE)
pbinom(4:5, size = 5, prob = 1/2, lower.tail = FALSE)
pbinom(5, size = 5, prob = 1/2, lower.tail = FALSE)
pbinom(1, size = 5, prob = 1/2, lower.tail = FALSE)
pbinom(2, size = 5, prob = 1/2, lower.tail = FALSE)
pbinom(3, size = 5, prob = 1/2, lower.tail = FALSE)
?pbinom
pbinom(4, n = 5, prob = 1/2, lower.tail = FALSE)
pnorm(14, mean = 15, sd = 10)
pnorm(14, mean = 15, sd = 10, lower.tail = FALSE)
pnorm(16, mean = 15, sd = 10)
pnorm(16, mean = 15, sd = 10, lower.tail = FALSE)
20/10
?ppois
ppois(10, 15)
qnorm(.95, mean = 1100, sd = 75)
qnorm(.95, mean = 1100, sd = 7.5)
library(swirl)
swirl()
myplot
myplot(2)
myplot(20)
myplot2(2)
qt(.975,df=2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2-g1
mean(difference)
range(difference)
s <- sd(difference)
mn + c(-1,1)*qt(.975, df = 9)
mn + c(-1,1)*qt(.975, df = 9)*s/sqrt(10)
t.test(difference)
t.test(difference)$conf.int
sp<-7*15.34^2+20*18.23^2
ns <- 8+21-2
sp <- sqrt(sp/ns)
(132.86-127.44)+ c(-1,1)*qt(0.975,27)*sp/sqrt(1/8+1/21)
(132.86-127.44)+ c(-1,1)*qt(0.975,ns)*sp/sqrt(1/8+1/21)
(132.86-127.44)+ c(-1,1)*qt(0.975,ns)*sp*sqrt(1/8+1/21)
132.86-127.44+c(-1,1)*qt(0.975,ns)*sp*sqrt(1/8+1/21)
sp<-sqrt()
sp<-sqrt((sd(g1)*9+sd(g2)*9)/18)
sp<-sqrt((var(g1)*9+var(g2)*9)/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md+c(-1,1)*qt(md,18)*sp*sqrt(2/10)
md+c(-1,1)*qt(.975,18)*sp*sqrt(2/10)
md+c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g2,g1, paired = F, var.equal = T)$conf
t.test(g2,g1, paired = FALSE, var.equal = TRUE)$conf
t.test(g2,g1, paired = TRUE, var.equal = TRUE)$conf
t.test(g2,g1, paired = TRUE)$conf
num <- (15.34^2/7+18.23^2/20)^2
num <- (15.34^2/8+18.23^2/21)^2
den<-15.34^4/64/7+18.23^4/21^2/20
mydf<-num/den
132.86-127.44 + c(-1,1)*mydf*sqrt(15.34^2/8+18.23^2/21)
132.86-127.44 + c(-1,1)*qt(0.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
1
(32-30)/1
2/1/4
2/10/4
(32-30)/(10/4)
15
qt(.95,15)
dim(fs)
t.test(fs$fheight,fs$sheight, paired = TRUE)
11.7885 *sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
6
8
pt(2.5,15, lower.tail = FALSE)
qnorm(0.95)
qnorm(0.99)
pnorm(2)
pnorm(2, lower.tail = FALSE)
mybin
pbinom(6,size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(7,size = 8, prob = 0.5)
ppois(9,5,lower.tail = FALSE)
?t.test
30/3
1100+c(-1,1)*qt(0.975,8)*10
1100+c(-1,1)*qt(0.95,8)*10
2*3/0.975
2/0.975
2*3/0.95
2*3/0.975
2*3/0.975/2
-2+c(-1,1)*qt(.975,18)*0.8*sqrt(1/9+1/9)
-2+c(-1,1)*qt(.975,18)*0.8/sqrt(9)
-2+c(-1,1)*qt(.975,18)*0.8/sqrt(18)
-2+c(-1,1)*qt(.975,18)*0.8*sqrt(1/9)
-2+c(-1,1)*qt(.975,18)*0.8*sqrt(1/9+1/9)
2+c(-1,1)*qnorm(.975)*sqrt(0.5)*sqrt(1/99+1/99)
sd <- sqrt((8*1.5^2+8*1.8^2)/16)
sd
-4+c(-1,1)*qt(.95,16)*sd*sqrt(1/9+1/9)
-2+c(-1,1)*qt(.975,18)*0.8*sqrt(1/10+1/10)
2+c(-1,1)*qnorm(.975)*sqrt(0.5)*sqrt(2/100)
qt(0.975,8)
4.3/3
6/2.3
?ToothGrowth
setwd("C:/Users/LeninGrib/Desktop/DS/R/course6/cw1")
